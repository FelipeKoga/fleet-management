# REST handlers
chat:
    name: ${self:app}-chat-${self:custom.stage}
    handler: functions/chat/index.handler
    role: TccRole
    package:
        include:
            - functions/chat/*
            - functions/chat/*/**
    events:
        - http:
              path: company/{companyId}/users/{username}/chats
              method: GET
              cors: true
              authorizer:
                  type: COGNITO_USER_POOLS
                  authorizerId:
                      Ref: ApiGatewayAuthorizer
        - http:
              path: company/{companyId}/users/{username}/chats
              method: POST
              cors: true
              authorizer:
                  type: COGNITO_USER_POOLS
                  authorizerId:
                      Ref: ApiGatewayAuthorizer
        - http:
              path: company/{companyId}/users/{username}/chats/{chatId}
              method: GET
              cors: true
              authorizer:
                  type: COGNITO_USER_POOLS
                  authorizerId:
                      Ref: ApiGatewayAuthorizer
        - http:
              path: company/{companyId}/users/{username}/chats/{chatId}/messages
              method: GET
              cors: true
              authorizer:
                  type: COGNITO_USER_POOLS
                  authorizerId:
                      Ref: ApiGatewayAuthorizer
        - http:
              path: company/{companyId}/users/{username}/group
              method: POST
              cors: true
              authorizer:
                  type: COGNITO_USER_POOLS
                  authorizerId:
                      Ref: ApiGatewayAuthorizer

        - http:
              path: company/{companyId}/users/{username}/group/{chatId}/avatar
              method: POST
              cors: true
              authorizer:
                  type: COGNITO_USER_POOLS
                  authorizerId:
                      Ref: ApiGatewayAuthorizer
        - http:
              path: company/{companyId}/users/{username}/group/{chatId}
              method: PUT
              cors: true
              authorizer:
                  type: COGNITO_USER_POOLS
                  authorizerId:
                      Ref: ApiGatewayAuthorizer

        - http:
              path: company/{companyId}/users/{username}/group/{chatId}/remove
              method: PUT
              cors: true
              authorizer:
                  type: COGNITO_USER_POOLS
                  authorizerId:
                      Ref: ApiGatewayAuthorizer

        - http:
              path: company/{companyId}/users/{username}/group/{chatId}
              method: GET
              cors: true
              authorizer:
                  type: COGNITO_USER_POOLS
                  authorizerId:
                      Ref: ApiGatewayAuthorizer
        - websocket:
              route: send-message
              routeResponseSelectionExpression: $default
        - websocket:
              route: open-messages
              routeResponseSelectionExpression: $default
    environment:
        APP: ${self:app}
        STAGE: ${self:custom.stage}
        TABLE: ${self:custom.table}
company:
    handler: functions/company/index.handler
    package:
        include:
            - functions/company/*
            - functions/company/*/**
user:
    name: ${self:app}-user-${self:custom.stage}
    handler: functions/user/index.handler
    role: TccRole
    package:
        include:
            - functions/user/*
            - functions/user/*/**
            - '!functions/user/node_modules/aws-sdk/**'
    events:
        - http:
              path: company/{companyId}/users
              method: GET
              cors: true
              authorizer:
                  type: COGNITO_USER_POOLS
                  authorizerId:
                      Ref: ApiGatewayAuthorizer
        - http:
              path: company/{companyId}/users/{username}
              method: GET
              cors: true
              authorizer:
                  type: COGNITO_USER_POOLS
                  authorizerId:
                      Ref: ApiGatewayAuthorizer
        - http:
              path: company/{companyId}/users
              method: POST
              cors: true
              authorizer:
                  type: COGNITO_USER_POOLS
                  authorizerId:
                      Ref: ApiGatewayAuthorizer
        - http:
              path: company/{companyId}/users/{username}
              method: PUT
              cors: true
              authorizer:
                  type: COGNITO_USER_POOLS
                  authorizerId:
                      Ref: ApiGatewayAuthorizer
        - http:
              path: company/{companyId}/users/{username}
              method: DELETE
              cors: true
              authorizer:
                  type: COGNITO_USER_POOLS
                  authorizerId:
                      Ref: ApiGatewayAuthorizer
    environment:
        APP: ${self:app}
        STAGE: ${self:custom.stage}
        TABLE: ${self:custom.table}

# Web Socket handlers
connection-handler:
    name: ${self:app}-connection-handler-${self:custom.stage}
    handler: functions/connection-handler/index.handler
    role: TccRole
    package:
        include:
            - functions/connection-handler/*
            - functions/connection-handler/*/**
            - '!functions/connection-handler/node_modules/aws-sdk/**'
    events:
        - websocket:
              route: $connect
              routeResponseSelectionExpression: $default
        - websocket:
              route: $disconnect
              routeResponseSelectionExpression: $default
    environment:
        WS_URL: ${self:custom.webSocketUrl}
        APP: ${self:app}
        STAGE: ${self:custom.stage}
        TABLE: ${self:custom.table}

        # KEYS_URL:
        #     !Join [
        #         '',
        #         [
        #             'https://cognito-idp.',
        #             '${opt:region, self:provider.region}',
        #             '.amazonaws.com/',
        #             !Ref CognitoUserPool,
        #             '/.well-known/jwks.json',
        #         ],
        #     ]

ws-post-message:
    name: ${self:app}-ws-post-message-${self:custom.stage}
    handler: functions/ws-post-message/index.handler
    role: TccRole
    package:
        include:
            - functions/ws-post-message/*
            - functions/ws-post-message/*/**
              - '!functions/ws-post-message/node_modules/aws-sdk/**'

    environment:
        WS_URL: ${self:custom.webSocketUrl}

s3-file-upload:
    name: ${self:app}-s3-file-upload-${self:custom.stage}
    handler: functions/s3-file-upload/index.handler
    role: TccRole
    package:
        include:
            - functions/s3-file-upload/*
            - functions/s3-file-upload/*/**
              - '!functions/s3-file-upload/node_modules/aws-sdk/**'
    events:
        - http:
              path: files
              method: POST
              cors: true
              authorizer:
                  type: COGNITO_USER_POOLS
                  authorizerId:
                      Ref: ApiGatewayAuthorizer
